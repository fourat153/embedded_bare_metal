/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2023 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>
#define RCC_BASE (0x40021000)
#define GPIO_BASE (0x40010800)
#define CRH *(volatile unsigned int *)(GPIO_BASE +0x04 )
#define ODR  *(volatile unsigned int * )(GPIO_BASE + 0x0C)
#define RCC *(volatile unsigned int *)(RCC_BASE + 0x18 )


int main(void)
{
	typedef union
			{
		unsigned int port ;
		struct {
			unsigned int reserved : 13;
			unsigned int pin :  1 ;
		}pins;

			}port_t;
	volatile  port_t * port  = (volatile port_t  *) ODR;
	 RCC |= (1<< 2 );
	 CRH &= 0xFF0FFFFF;
	 CRH |= 0x00200000;

	while (1)
	{
		port->pins.pin = 1;
		for(int i = 0 ; i<20 ;i++);

	    port->pins.pin = 0;
	    for(int i = 0 ; i<20 ;i++);

	}
}
